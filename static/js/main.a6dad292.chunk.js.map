{"version":3,"sources":["z-chars-logo.svg","App.tsx","serviceWorker.ts","index.tsx"],"names":["_g","_g2","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","svgRef","title","props","createElement","width","height","viewBox","xmlSpace","style","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","ref","transform","d","x","y","ForwardRef","forwardRef","placeholders","subject","hidden","encode","decode","encoded","copyingStyle","animationIterationCount","animationDuration","App","useCopyToClipboard","setClipboard","useState","isCopying","setCopying","decodeView","URLSearchParams","document","location","search","get","mode","setMode","setSubject","toEncode","setToEncode","toDecode","setToDecode","statusCode","setStatus","toCopy","setToCopy","useEffect","subjectTrimmed","trim","encodeTrimmed","encodeStatusCode","testEncode","statusInfo","valid","mustEncode","decodeStatusCode","testDecode","mustDecode","setTimeout","status","undefined","error","errorFrom","errorLevel","ErrorStatus","INFO","showError","message","className","onSubmit","e","preventDefault","placeholder","onChange","currentTarget","value","readOnly","disabled","onClick","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.a6dad292.chunk.js","sourcesContent":["var _g, _g2;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgZCharsLogo = function SvgZCharsLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 305 471\",\n    xmlSpace: \"preserve\",\n    style: {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      strokeLinejoin: \"round\",\n      strokeMiterlimit: 2\n    },\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"matrix(3.17507,0,0,3.17507,-3382.56,-3913.9)\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"matrix(50,0,0,50,1063.65,1353.01)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.196,0.01C0.143,0.01 0.103,-0.005 0.076,-0.035C0.048,-0.065 0.034,-0.107 0.034,-0.162L0.034,-0.538C0.034,-0.593 0.048,-0.635 0.076,-0.665C0.103,-0.695 0.143,-0.71 0.196,-0.71C0.249,-0.71 0.289,-0.695 0.317,-0.665C0.344,-0.635 0.358,-0.593 0.358,-0.538L0.358,-0.464L0.254,-0.464L0.254,-0.545C0.254,-0.588 0.236,-0.61 0.199,-0.61C0.162,-0.61 0.144,-0.588 0.144,-0.545L0.144,-0.154C0.144,-0.111 0.162,-0.09 0.199,-0.09C0.236,-0.09 0.254,-0.111 0.254,-0.154L0.254,-0.261L0.358,-0.261L0.358,-0.162C0.358,-0.107 0.344,-0.065 0.317,-0.035C0.289,-0.005 0.249,0.01 0.196,0.01Z\",\n    style: {\n      fillRule: \"nonzero\"\n    }\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"matrix(50,0,0,50,1082.8,1353.01)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.041,-0.7L0.151,-0.7L0.151,-0.415L0.269,-0.415L0.269,-0.7L0.379,-0.7L0.379,0L0.269,0L0.269,-0.315L0.151,-0.315L0.151,0L0.041,0L0.041,-0.7Z\",\n    style: {\n      fillRule: \"nonzero\"\n    }\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"matrix(50,0,0,50,1103.8,1353.01)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.126,-0.7L0.275,-0.7L0.389,0L0.279,0L0.259,-0.139L0.259,-0.137L0.134,-0.137L0.114,0L0.012,0L0.126,-0.7ZM0.246,-0.232L0.197,-0.578L0.195,-0.578L0.147,-0.232L0.246,-0.232Z\",\n    style: {\n      fillRule: \"nonzero\"\n    }\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"matrix(50,0,0,50,1123.85,1353.01)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.041,-0.7L0.204,-0.7C0.261,-0.7 0.302,-0.687 0.328,-0.661C0.354,-0.634 0.367,-0.594 0.367,-0.539L0.367,-0.496C0.367,-0.423 0.343,-0.377 0.295,-0.358L0.295,-0.356C0.322,-0.348 0.341,-0.332 0.352,-0.307C0.363,-0.282 0.368,-0.249 0.368,-0.208L0.368,-0.085C0.368,-0.065 0.369,-0.049 0.37,-0.037C0.371,-0.024 0.375,-0.012 0.38,0L0.268,0C0.264,-0.011 0.261,-0.022 0.26,-0.032C0.259,-0.042 0.258,-0.06 0.258,-0.086L0.258,-0.214C0.258,-0.246 0.253,-0.268 0.243,-0.281C0.232,-0.294 0.214,-0.3 0.189,-0.3L0.151,-0.3L0.151,0L0.041,0L0.041,-0.7ZM0.191,-0.4C0.213,-0.4 0.23,-0.406 0.241,-0.417C0.252,-0.428 0.257,-0.447 0.257,-0.474L0.257,-0.528C0.257,-0.553 0.253,-0.572 0.244,-0.583C0.235,-0.594 0.22,-0.6 0.201,-0.6L0.151,-0.6L0.151,-0.4L0.191,-0.4Z\",\n    style: {\n      fillRule: \"nonzero\"\n    }\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"matrix(50,0,0,50,1144,1353.01)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.184,0.01C0.131,0.01 0.09,-0.005 0.063,-0.036C0.036,-0.066 0.022,-0.109 0.022,-0.166L0.022,-0.206L0.126,-0.206L0.126,-0.158C0.126,-0.113 0.145,-0.09 0.183,-0.09C0.202,-0.09 0.216,-0.095 0.226,-0.107C0.235,-0.117 0.24,-0.135 0.24,-0.16C0.24,-0.189 0.233,-0.215 0.22,-0.238C0.207,-0.26 0.182,-0.287 0.146,-0.318C0.101,-0.358 0.069,-0.394 0.051,-0.427C0.033,-0.459 0.024,-0.495 0.024,-0.536C0.024,-0.591 0.038,-0.634 0.066,-0.665C0.094,-0.695 0.135,-0.71 0.188,-0.71C0.241,-0.71 0.281,-0.695 0.308,-0.665C0.335,-0.634 0.348,-0.591 0.348,-0.534L0.348,-0.505L0.244,-0.505L0.244,-0.541C0.244,-0.565 0.239,-0.583 0.23,-0.594C0.221,-0.604 0.207,-0.61 0.189,-0.61C0.152,-0.61 0.134,-0.588 0.134,-0.543C0.134,-0.518 0.141,-0.494 0.155,-0.472C0.168,-0.45 0.193,-0.423 0.229,-0.392C0.275,-0.352 0.307,-0.316 0.324,-0.283C0.341,-0.25 0.35,-0.212 0.35,-0.168C0.35,-0.111 0.336,-0.067 0.308,-0.036C0.279,-0.005 0.238,0.01 0.184,0.01Z\",\n    style: {\n      fillRule: \"nonzero\"\n    }\n  })))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"matrix(1,0,0,1,-1157.79,-348.208)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1463.08,418.428L1259.43,530.971L1463.08,530.971L1463.08,585.034L1157.79,585.034L1157.79,526.29L1381.34,402.749L1157.79,402.749L1157.79,348.673L1463.08,348.673L1463.08,418.428Z\"\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"matrix(1,0,0,0.22873,-1157.79,336.264)\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 1157.79,\n    y: 348.673,\n    width: 305.283,\n    height: 236.361\n  }))));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgZCharsLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/z-chars-logo.562872e1.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, ChangeEvent, useEffect, CSSProperties } from 'react';\nimport { ReactComponent as Logo } from './z-chars-logo.svg';\nimport './App.css';\n\nimport { useCopyToClipboard } from 'react-use';\n\nimport { testEncode, testDecode, statusInfo, ErrorStatus, mustEncode, mustDecode } from 'z-chars';\n\n// 305 471\n\nconst placeholders = {\n  subject: \"A VISIBLE message\",\n  hidden: \"A HIDDEN message\",\n  encode: \"The VISIBLE and HIDDEN message combined\",\n  decode: \"The decoded message\",\n  encoded: \"An encoded message containing a HIDDEN message\",\n}\n\nconst animationDuration = 100;\nconst animationIterationCount = 2;\n\nconst copyingStyle: CSSProperties = {\n  animationIterationCount,\n  animationDuration: `${animationDuration}ms`,\n};\n\ntype StatusValue = typeof statusInfo[keyof typeof statusInfo]\ntype ErrorValue = typeof statusInfo[Exclude<keyof typeof statusInfo, \"OK\">]\n\nconst showError = (status: StatusValue): status is ErrorValue => {\n  return status.errorFrom ? status.errorLevel > ErrorStatus.INFO : false;\n};\n\nfunction App() {\n\n  const [, setClipboard] = useCopyToClipboard();\n  const [isCopying, setCopying] = useState(false);\n\n  const params = new URLSearchParams(document.location.search);\n  const decodeView = params.get(\"view\") === \"decode\";\n\n  const [mode, setMode] = useState<\"encode\" | \"decode\">(decodeView ? \"decode\" : \"encode\");\n\n  const [subject, setSubject] = useState(\"\");\n  const [toEncode, setToEncode] = useState(\"\");\n  const [toDecode, setToDecode] = useState(\"\");\n\n  const [statusCode, setStatus] = useState<keyof typeof statusInfo>();\n\n  const [toCopy, setToCopy] = useState(\"\");\n\n  useEffect(() => {\n\n    if (mode === \"encode\") {\n\n      const subjectTrimmed = subject.trim();\n      const encodeTrimmed = toEncode.trim();\n\n      const encodeStatusCode = testEncode(subjectTrimmed, encodeTrimmed);\n      setStatus(encodeStatusCode);\n\n      if (statusInfo[encodeStatusCode].valid) {\n        setToCopy(mustEncode(subjectTrimmed, encodeTrimmed));\n      } else {\n        setToCopy(\"\");\n      }\n\n    }\n    if (mode === \"decode\") {\n      const decodeStatusCode = testDecode(toDecode);\n      setStatus(decodeStatusCode);\n\n      if (statusInfo[decodeStatusCode].valid) {\n        setToCopy(mustDecode(toDecode));\n      } else {\n        setToCopy(\"\");\n      }\n    }\n  }, [mode, subject, toEncode, toDecode, statusCode])\n\n  useEffect(() => {\n    if (isCopying) {\n      setClipboard(toCopy);\n      setTimeout(() => setCopying(false), animationDuration * animationIterationCount);\n    }\n  }, [isCopying, toCopy, setClipboard]);\n\n  const onEncodeMode = () => setMode(\"encode\");\n  const onDecodeMode = () => setMode(\"decode\");\n\n  const onCopy = () => setCopying(true);\n\n  const onSubjectUpdate = (e: ChangeEvent<HTMLTextAreaElement>) => setSubject(e.currentTarget.value);\n  const onEncodeUpdate = (e: ChangeEvent<HTMLTextAreaElement>) => setToEncode(e.currentTarget.value);\n  const onDecodeUpdate = (e: ChangeEvent<HTMLTextAreaElement>) => setToDecode(e.currentTarget.value);\n\n  const status = statusCode ? statusInfo[statusCode] : undefined;\n  const error = (status && showError(status)) ?\n    ({ [status.errorFrom]: <><span>⚠</span> {status.message}</> })\n    : undefined;\n\n  return (\n    <main className={mode}>\n\n      <div className=\"App\">\n\n        <div className=\"formWrapper\">\n          <Logo className=\"Logo\" />\n          <form onSubmit={e => e.preventDefault()}>\n            <div className=\"encode\">\n              <textarea\n                placeholder={placeholders.subject}\n                onChange={onSubjectUpdate}\n                value={subject} />\n              <footer>{error?.subject}</footer>\n            </div>\n            <div className=\"encode\">\n              <textarea\n                placeholder={placeholders.hidden}\n                onChange={onEncodeUpdate}\n                value={toEncode} />\n              <footer>{error?.encode}</footer>\n            </div>\n            <div className=\"copy\">\n              <textarea\n                placeholder={placeholders[mode]}\n                className={isCopying ? \"copied\" : undefined}\n                style={copyingStyle}\n                value={toCopy}\n                readOnly />\n              <button disabled={!toCopy || isCopying} onClick={onCopy}>\n                Copy {mode === \"decode\" ? \"Decoded\" : \"Encoded\"}\n              </button>\n            </div>\n            <div className=\"decode\">\n              <textarea\n                placeholder={placeholders.encoded}\n                onChange={onDecodeUpdate}\n                value={toDecode} />\n              <footer>{error?.decode}</footer>\n            </div>\n          </form>\n          <footer>\n            <button className=\"encode\" onClick={onEncodeMode}>← Encode</button>\n            <button className=\"decode\" onClick={onDecodeMode}>Decode →</button>\n          </footer>\n        </div>\n\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}